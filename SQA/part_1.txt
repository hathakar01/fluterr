import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(),
      debugShowCheckedModeBanner: false,
      home: mypin(),
    );
  }
}

class mypin extends StatefulWidget {
  @override
  frist_ui createState() => frist_ui();
}

class frist_ui extends State<mypin> {
  bool valid = false;
  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    final uname = TextEditingController();
    final d1 = TextEditingController();
    final d2 = TextEditingController();
    final d3 = TextEditingController();
    final d4 = TextEditingController();
    TextEditingController tec = TextEditingController();
    Row r1 = Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Container(
          padding: EdgeInsets.symmetric(horizontal: 16),
          width: 800,
          margin: EdgeInsets.symmetric(vertical: 15),
          child: TextField(
            controller: uname,
            decoration: InputDecoration(hintText: "enter username "),
          ),
        ),
      ],
    );

    Row r2 = Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Container(
          width: 50,
          child: TextField(
            controller: d1,
            maxLength: 1,
            keyboardType: TextInputType.number,
            decoration: InputDecoration(
              border: OutlineInputBorder(),
            ),
          ),
        ),
        SizedBox(
          width: 20,
        ),
        Container(
          width: 50,
          child: TextField(
            controller: d2,
            maxLength: 1,
            keyboardType: TextInputType.number,
            decoration: InputDecoration(
              border: OutlineInputBorder(),
            ),
          ),
        ),
        SizedBox(
          width: 20,
        ),
        Container(
          width: 50,
          child: TextField(
            controller: d3,
            maxLength: 1,
            keyboardType: TextInputType.number,
            decoration: InputDecoration(
              border: OutlineInputBorder(),
            ),
          ),
        ),
        SizedBox(
          width: 20,
        ),
        Container(
          width: 50,
          child: TextField(
            controller: d4,
            maxLength: 1,
            keyboardType: TextInputType.number,
            decoration: InputDecoration(
              border: OutlineInputBorder(),
            ),
          ),
        ),
      ],
    );
    Row r3 = Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Container(
          margin: EdgeInsets.symmetric(vertical: 15),
          child: ElevatedButton(
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.deepPurpleAccent,
            ),
            onPressed: () {
              valid = uname.text == 'admin' &&
                  d1.text == '2' &&
                  d2.text == '3' &&
                  d3.text == '2' &&
                  d4.text == '3';
              if (valid) {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => WelcomePage(),
                  ),
                );
              } else {
                ScaffoldMessenger.of(context).showSnackBar(
                  const SnackBar(
                    content: Center(
                      child: Text("Enter valid Data"),
                    ),
                    backgroundColor: Colors.deepPurpleAccent,
                  ),
                );
              }
            },
            child: Text('Login'),
          ),
        ),
      ],
    );
    Row r4 = Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Container(
          child: ElevatedButton(
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.deepPurpleAccent,
            ),
            onPressed: () {
              uname.clear();
              d1.clear();
              d2.clear();
              d3.clear();
              d4.clear();
            },
            child: Text('reset'),
          ),
        ),
      ],
    );
    Center c3 = Center(
      child: Container(
        margin: EdgeInsets.symmetric(vertical: 10),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Please select a Date:',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),

          ],
        ),
      ),
    );
    TextField tf = TextField(
        controller: tec, //editing controller of this TextField
        decoration: const InputDecoration(
            icon: Icon(Icons.calendar_today), //icon of text field
            labelText: "Select Date" //label text of field
        ),
        readOnly: true,  // when true user cannot edit text

        //--------------------------------------------------------
        onTap: () async {
          //when click we have to show the datepicker
          DateTime? pickedDate = await showDatePicker(
              context: context,
              initialDate: DateTime.now(), //get today's date
              firstDate:DateTime.now(), //DateTime.now() - not to allow to choose before today.
              lastDate: DateTime(2025)
          );

          if(pickedDate != null )
          {
            debugPrint(pickedDate.toString());  //get the picked date in the format => 2022-07-04 00:00:00.00
            String formattedDate = DateFormat('dd-MM-yyyy').format(pickedDate); // format date in required form here we use yyyy-MM-dd that means time is removed
            print(formattedDate); //formatted date output using intl package =>  2022-07-04

            tec.text = formattedDate; //set formatted date to TextField value.


            SnackBar snackBar = SnackBar(
              content: Center(
                child:  Text(formattedDate),
              ),
              duration: const Duration(seconds:5),
              backgroundColor:  Colors.deepPurpleAccent,
              action: SnackBarAction(
                label: 'Undo',
                onPressed: () {
                  // Some code to undo the change.
                },
              ),
            );

            ScaffoldMessenger.of(context).showSnackBar(snackBar);

          }else{
            debugPrint("Date is not selected");
          }



        }
    );
    Column c1 = Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [r1, r2, r3, r4,c3,tf],
    );
    /* Container c2=Container(child: c1,);*/

    Scaffold s1 = Scaffold(
      body: c1,
      appBar: AppBar(
          title: Text("My first Runnable Program in flutter"),
          backgroundColor: Colors.deepPurpleAccent),
    );
    return s1;
  }
}

class WelcomePage extends StatefulWidget {
  second_ui createState() => second_ui();
}

class second_ui extends State<WelcomePage> {
  String _selectedOption = '';
  List<String> _checked = [];

  void alert() {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: Text('You selected $_checked.'),
        actions: [
          TextButton(
            onPressed: () {
              Navigator.pop(context, 'OK');
            },
            child: const Text('OK'),
          ),
        ],
      ),
    );
  }

  void sbar() {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Center(
          child: Text("${this._selectedOption}"),
        ),
        backgroundColor: Colors.deepPurpleAccent,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    Row r1 = Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Container(
          margin: EdgeInsets.symmetric(vertical: 10),
          child: Text(
            "Hello Admin",
            style: TextStyle(fontSize: 25, fontWeight: FontWeight.bold),
          ),
        ),
      ],
    );
    Center c1 = Center(
      child: Container(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Please select a Course:',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),
            RadioListTile<String>(
              title: Text('BCA'),
              value: 'BCA',
              groupValue: _selectedOption,
              activeColor: Colors.deepPurpleAccent,
              onChanged: (value) {
                setState(() {
                  _selectedOption = value!;
                  sbar();
                });
              },
            ),
            RadioListTile<String>(
              title: Text('Bsc.IT'),
              value: 'Bsc.IT',
              groupValue: _selectedOption,
              activeColor: Colors.deepPurpleAccent,
              onChanged: (value) {
                setState(() {
                  _selectedOption = value!;
                  sbar();
                });
              },
            ),
            RadioListTile<String>(
              title: Text('MCA'),
              value: 'MCA',
              groupValue: _selectedOption,
              activeColor: Colors.deepPurpleAccent,
              onChanged: (value) {
                setState(() {
                  _selectedOption = value!;
                  sbar();
                });
              },
            ),
            RadioListTile<String>(
              title: Text('Msc.IT'),
              value: 'Msc.IT',
              groupValue: _selectedOption,
              activeColor: Colors.deepPurpleAccent,
              onChanged: (value) {
                setState(() {
                  _selectedOption = value!;
                  sbar();
                });
              },
            ),
          ],
        ),
      ),
    );
    Center c2 = Center(
      child: Container(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Please select a Subject:',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),
            CheckboxListTile(
              title: Text('DSA'),
              value: _checked.contains('DSA'),
              onChanged: (value) {
                setState(() {
                  if (value!) {
                    _checked.add('DSA');
                  } else {
                    _checked.remove('DSA');
                  }
                });
              },
            ),
            CheckboxListTile(
              title: Text('flutter'),
              value: _checked.contains('flutter'),
              onChanged: (value) {
                setState(() {
                  if (value!) {
                    _checked.add('flutter');
                  } else {
                    _checked.remove('flutter');
                  }
                });
              },
            ),
            CheckboxListTile(
              title: Text('.NET'),
              value: _checked.contains('.NET'),
              onChanged: (value) {
                setState(() {
                  if (value!) {
                    _checked.add('.NET');
                  } else {
                    _checked.remove('.NET');
                  }
                });
              },
            ),
            CheckboxListTile(
              title: Text('Database'),
              value: _checked.contains('Database'),
              onChanged: (value) {
                setState(() {
                  if (value!) {
                    _checked.add('Database');
                  } else {
                    _checked.remove('Database');
                  }
                });
              },
            ),
          ],
        ),
      ),
    );
    Row r3 = Row(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        ElevatedButton(
          onPressed: () {
            alert();
          },
          child: Text("Show Subject"),
        ),
      ],
    );
    Center c3 = Center(
      child: Container(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              'Please select a Subject:',
              style: TextStyle(fontSize: 20),
            ),
            SizedBox(height: 20),

          ],
        ),
      ),
    );


    Column course = Column(
      children: [r1, c1, c2, r3,],
    );
    Scaffold s1 = Scaffold(
      body: course,
      appBar: AppBar(
          title: Text("Welcome Page"),
          backgroundColor: Colors.deepPurpleAccent),
    );
    return s1;
  }
}
